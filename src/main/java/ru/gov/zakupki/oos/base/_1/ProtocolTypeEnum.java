//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.07.02 at 03:35:23 PM MSK 
//


package ru.gov.zakupki.oos.base._1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for protocolTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="protocolTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="epProtocolEOK1"/>
 *     &lt;enumeration value="epProtocolEOK2"/>
 *     &lt;enumeration value="epProtocolEOK3"/>
 *     &lt;enumeration value="epProtocolEOKSingleApp"/>
 *     &lt;enumeration value="epProtocolEOKSinglePart"/>
 *     &lt;enumeration value="epProtocolEOKOU1"/>
 *     &lt;enumeration value="epProtocolEOKOU2"/>
 *     &lt;enumeration value="epProtocolEOKOU3"/>
 *     &lt;enumeration value="epProtocolEOKOUSingleApp"/>
 *     &lt;enumeration value="epProtocolEOKOUSinglePart"/>
 *     &lt;enumeration value="epProtocolEOKD1"/>
 *     &lt;enumeration value="epProtocolEOKD2"/>
 *     &lt;enumeration value="epProtocolEOKD3"/>
 *     &lt;enumeration value="epProtocolEOKD4"/>
 *     &lt;enumeration value="epProtocolEOKDSingleApp"/>
 *     &lt;enumeration value="epProtocolEOKDSinglePart"/>
 *     &lt;enumeration value="epProtocolEZK1"/>
 *     &lt;enumeration value="epProtocolEZK2"/>
 *     &lt;enumeration value="epProtocolEZP1Extract"/>
 *     &lt;enumeration value="epProtocolEZP1"/>
 *     &lt;enumeration value="epProtocolEZP2"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "protocolTypeEnum")
@XmlEnum
public enum ProtocolTypeEnum {

    @XmlEnumValue("epProtocolEOK1")
    EP_PROTOCOL_EOK_1("epProtocolEOK1"),
    @XmlEnumValue("epProtocolEOK2")
    EP_PROTOCOL_EOK_2("epProtocolEOK2"),
    @XmlEnumValue("epProtocolEOK3")
    EP_PROTOCOL_EOK_3("epProtocolEOK3"),
    @XmlEnumValue("epProtocolEOKSingleApp")
    EP_PROTOCOL_EOK_SINGLE_APP("epProtocolEOKSingleApp"),
    @XmlEnumValue("epProtocolEOKSinglePart")
    EP_PROTOCOL_EOK_SINGLE_PART("epProtocolEOKSinglePart"),
    @XmlEnumValue("epProtocolEOKOU1")
    EP_PROTOCOL_EOKOU_1("epProtocolEOKOU1"),
    @XmlEnumValue("epProtocolEOKOU2")
    EP_PROTOCOL_EOKOU_2("epProtocolEOKOU2"),
    @XmlEnumValue("epProtocolEOKOU3")
    EP_PROTOCOL_EOKOU_3("epProtocolEOKOU3"),
    @XmlEnumValue("epProtocolEOKOUSingleApp")
    EP_PROTOCOL_EOKOU_SINGLE_APP("epProtocolEOKOUSingleApp"),
    @XmlEnumValue("epProtocolEOKOUSinglePart")
    EP_PROTOCOL_EOKOU_SINGLE_PART("epProtocolEOKOUSinglePart"),
    @XmlEnumValue("epProtocolEOKD1")
    EP_PROTOCOL_EOKD_1("epProtocolEOKD1"),
    @XmlEnumValue("epProtocolEOKD2")
    EP_PROTOCOL_EOKD_2("epProtocolEOKD2"),
    @XmlEnumValue("epProtocolEOKD3")
    EP_PROTOCOL_EOKD_3("epProtocolEOKD3"),
    @XmlEnumValue("epProtocolEOKD4")
    EP_PROTOCOL_EOKD_4("epProtocolEOKD4"),
    @XmlEnumValue("epProtocolEOKDSingleApp")
    EP_PROTOCOL_EOKD_SINGLE_APP("epProtocolEOKDSingleApp"),
    @XmlEnumValue("epProtocolEOKDSinglePart")
    EP_PROTOCOL_EOKD_SINGLE_PART("epProtocolEOKDSinglePart"),
    @XmlEnumValue("epProtocolEZK1")
    EP_PROTOCOL_EZK_1("epProtocolEZK1"),
    @XmlEnumValue("epProtocolEZK2")
    EP_PROTOCOL_EZK_2("epProtocolEZK2"),
    @XmlEnumValue("epProtocolEZP1Extract")
    EP_PROTOCOL_EZP_1_EXTRACT("epProtocolEZP1Extract"),
    @XmlEnumValue("epProtocolEZP1")
    EP_PROTOCOL_EZP_1("epProtocolEZP1"),
    @XmlEnumValue("epProtocolEZP2")
    EP_PROTOCOL_EZP_2("epProtocolEZP2");
    private final String value;

    ProtocolTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ProtocolTypeEnum fromValue(String v) {
        for (ProtocolTypeEnum c: ProtocolTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
